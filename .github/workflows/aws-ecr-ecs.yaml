name: deploy-to-ecs

on:
  push:
    branches:
      - main

env:
  AWS_REGION: <your-aws-region>
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  ECR_REPOSITORY: <your-ecr-repository-name>
  ECS_CLUSTER: <your-ecs-cluster-name>
  ECS_SERVICE: <your-ecs-service-name>

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag Docker image
        id: build-image
        run: |
          docker build -t $ECR_REPOSITORY .
          echo "::set-output name=image-tag::$(echo $GITHUB_SHA | cut -c1-7)"

      - name: Push Docker image to Amazon ECR
        id: push-image
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REPOSITORY:$GITHUB_SHA
          docker push $ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REPOSITORY:$GITHUB_SHA
        env:
          IMAGE_TAG: ${{ steps.build-image.outputs.image-tag }}

      - name: Update ECS Task Definition
        id: update-task-definition
        uses: aws-actions/amazon-ecs-update-task-definition@v1
        with:
          family: $ECS_SERVICE
          container-name: <your-container-name>
          image: $ECR_REPOSITORY:$GITHUB_SHA

      - name: Update ECS Service
        id: update-service
        uses: aws-actions/amazon-ecs-deploy-service@v1
        with:
          cluster: $ECS_CLUSTER
          service: $ECS_SERVICE
          task-definition: ${{ steps.update-task-definition.outputs.task-definition-arn }}
